# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  APP_NAME: app
  APPLICATION_PATH:  argo/services/values
jobs:
  
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest requests
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names#
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest test_main.py

  build-container-image:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
  
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
    - name: Extract metadata (tags, labels) for container image
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: galsolom/app
        tags: | 
          type=sha,format=long,prefix={{branch}}-

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new

    - name: Move cache
      run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  update-argocd-repo:
      needs: build-container-image
      runs-on: ubuntu-latest
      steps:
      - name: Extract metadata (tags, labels) for container image
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: galsolom/app
          tags: | 
            type=sha,format=long,prefix={{branch}}-

      - name: Checkout ArgoCD repository
        uses: actions/checkout@v3
        with:
          repository: galsolom/argo
          ref: main
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
      
      - name: create application version variable
        id: version
        run: |
           echo ::set-output name=appversion::$(echo ${{ steps.meta.outputs.tags }} | sed 's/.*://' -)
          
      - name: update helm chart values in argocd repo
        id: yamlUpdate
        uses: mikefarah/yq@master
        env:
          appversion: ${{ steps.version.outputs.appversion }}
        with:
          cmd: yq -i '.image.tag=strenv(appversion)' $APPLICATION_PATH/$APP_NAME.yaml
          
      - name: read file
        run: |
          cat $APPLICATION_PATH/$APP_NAME.yaml
      - name: Commit files
        env:
          APPVERSION: ${{ steps.version.outputs.appversion }}
        run: |
          git config --local user.email "actionbot@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add $APPLICATION_PATH/$APP_NAME.yaml
          git commit -m "updated $APPLICATION_PATH/$APP_NAME version: $APPVERSION "
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.ARGO_GH_TOKEN }}
          branch: main
          repository: galsolom/argo